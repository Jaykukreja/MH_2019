<!DOCTYPE html>
<html>
<head>
  <title>Patient View</title>
  <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
  <script src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.11.1/jquery.validate.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"></script>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">

<style>
* {
  box-sizing: border-box;
}

body {
  font: 16px Arial;  
}

#patient_details{
      overflow: auto;
    }

    #searchBar {
      margin: 5vh 50vh;
    }

/*the container must be positioned relative:*/
.autocomplete {
  position: relative;
  display: inline-block;
}

input {
  border: 1px solid transparent;
  background-color: #f1f1f1;
  padding: 10px;
  font-size: 16px;
}

input[type=text] {
  background-color: #f1f1f1;
  width: 100%;
  border-radius: 50px 50px;
}

input[type=submit] {
  background-color: DodgerBlue;
  color: #fff;
  cursor: pointer;
  padding: 1.5vh 3vh;
  border-radius: 50px 50px;
  margin-left: 3vh;
}

.autocomplete-items {
  position: absolute;
  border: 1px solid #d4d4d4;
  border-bottom: none;
  /*border-top: none;*/
  z-index: 99;
  /*position the autocomplete items to be the same width as the container:*/
  top: 100%;
  left: 0;
  right: 0;
  border-top-right-radius: 20px;
  border-top-left-radius: 20px;
}

.autocomplete-items div {
  padding: 10px;
  cursor: pointer;
  background-color: #fff; 
  border-bottom: 1px solid #d4d4d4; 
}

/*when hovering an item:*/
.autocomplete-items div:hover {
  background-color: #e9e9e9; 
}

/*when navigating through the items using the arrow keys:*/
.autocomplete-active {
  background-color: DodgerBlue !important; 
  color: #ffffff; 
}

button[type="button"]{
  padding: 1.5vh 4vh;
  border-radius: 50px; 
  font-size: 16px; 
  outline: none;
}

#toastMessage{
  visibility: hidden;
  min-width: 250px;
  margin-left: -125px;
  background-color: #333;
  color: #fff;
  text-align: center;
  border-radius: 50px;
  padding: 16px;
  position: fixed;
  z-index: 1;
  left: 50%;
  bottom: 30px;
  font-size: 17px;
}

#toastMessage.show{
  visibility: visible;
  animation: fadein 0.5s, fadout 0.5s 2.5s;
}

@keyframes fadein {
  from { bottom: 0; opacity: 0; }
  to { bottom: 30px; opacity: 0; }
}

@keyframes fadeout {
  from { bottom: 30px; opacity: 1; }
  to { bottom: 0; opacity: 0; }
}

</style>
</head>     
<body>

  <div>
    <% include navbar.ejs ;%>
  </div>


<!--Make sure the form has the autocomplete function switched off:-->
<form autocomplete="off" action="/search" id="searchBar" method="post" style="margin-top: 12vh;">
  <div class="autocomplete" style="width:700px;margin-left:-25vh;">
    <input id="myInput" type="text" name="myCountry" class="form-control" style="padding:3vh;" placeholder="Enter the patient name...">
  </div>
  <input type="submit">
</form>


  <div class="container-fluid row">

    <div id="patient_details" style="width: 42vw; height: 90vh;margin: 2vh; margin-top: 1vh;padding-left: 3vh; border:1px solid black;">

      <% results.forEach(function(result){ %>

      <div style="width: 38vw; height: 20vh; margin:5vh; margin-left: 0; border-radius: 2vh; border: 2px solid black;">
        
        <div class="row" style="padding: 4vh 6vh">
          
          <div>
            <img src="<%= result.image %>.png" alt="File" width="90" height="90">
          </div>

          <div style="margin-left: 15vh;">
            <p><strong>Patient Id: </strong><%= results[result] %></p>

            <!-- <p><strong>Patient Name: </strong><%= result.name %></p> -->

            <!-- <p><strong>Patient Address: </strong><%= result.address %></p> -->
          </div>

          <div style="margin-left: 55vh; margin-top: 0vh;">
            <button type="button" class="btn btn-primary">View</button>
          </div>

        </div>

      </div>

      <% }); %>

    </div>

    <div>
      <div style="width: 52vw; height: 90vh; margin-top: 1vh; overflow: auto;border: 1px solid black;">
        <div id="patient_view">
          <img width="170" height="170" style="margin: 2vh 40vh;" id="patient_image">
          <div style="margin: 5vh 30vh;">
            <p><strong>Patient Id: </strong><span id="patient_id"> Patient Id</span></p>

            <!-- <p><strong>Patient Name: </strong><span id="patient_name"> Patient Name</span></p> -->

            <!-- <p><strong>Patient Address: </strong><span id="patient_address"> Patient Address</span></p> -->
          </div>          
        </div>
        <!-- <p>asdfsfdhfhgk</p> -->
        <button type="button" class="btn btn-success" data-toggle="modal" data-target="#data_des" style="margin-left:40vh;">Get Access</button>

        <div class="modal fade" id="data_des">
          <div class="modal-dialog">
            <div class="modal-content">

              <!-- Modal Header -->
              <div class="modal-header">
                <h4 class="modal-title">Description</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
              </div>

              <!-- Modal body -->
              <form action="#" method="post">
                <div class="modal-body">
                  <textarea class="form-control" rows="5" id="descripton_data" name="data_description" placeholder="Enter a valid description to get access"></textarea>
                </div>
              </form>

              <!-- Modal footer -->
              <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal" onclick="toast()">Save</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
              </div>

            </div>
          </div>
        </div>

        <div id="toastMessage">Your request is sent.</div>
      </div>
    </div>

  </div>

  <div>
    <% include footer.ejs ;%>
  </div>

<script>
  
  function toast(){
    var x = document.getElementById("toastMessage");
    x.className = "show";
    setTimeout(function(){ x.className = x.className.replace("show", "");}, 3000);
  }


function autocomplete(inp, arr) {
  /*the autocomplete function takes two arguments,
  the text field element and an array of possible autocompleted values:*/
  var currentFocus;
  /*execute a function when someone writes in the text field:*/
  inp.addEventListener("input", function(e) {
      var a, b, i, val = this.value;
      /*close any already open lists of autocompleted values*/
      closeAllLists();
      if (!val) { return false;}
      currentFocus = -1;
      /*create a DIV element that will contain the items (values):*/
      a = document.createElement("DIV");
      a.setAttribute("id", this.id + "autocomplete-list");
      a.setAttribute("class", "autocomplete-items");
      /*append the DIV element as a child of the autocomplete container:*/
      this.parentNode.appendChild(a);
      /*for each item in the array...*/
      for (i = 0; i < arr.length; i++) {
        /*check if the item starts with the same letters as the text field value:*/
        if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
          /*create a DIV element for each matching element:*/
          b = document.createElement("DIV");
          /*make the matching letters bold:*/
          b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
          b.innerHTML += arr[i].substr(val.length);
          /*insert a input field that will hold the current array item's value:*/
          b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
          /*execute a function when someone clicks on the item value (DIV element):*/
          b.addEventListener("click", function(e) {
              /*insert the value for the autocomplete text field:*/
              inp.value = this.getElementsByTagName("input")[0].value;
              /*close the list of autocompleted values,
              (or any other open lists of autocompleted values:*/
              closeAllLists();
          });
          a.appendChild(b);
        }
      }
  });
  /*execute a function presses a key on the keyboard:*/
  inp.addEventListener("keydown", function(e) {
      var x = document.getElementById(this.id + "autocomplete-list");
      if (x) x = x.getElementsByTagName("div");
      if (e.keyCode == 40) {
        /*If the arrow DOWN key is pressed,
        increase the currentFocus variable:*/
        currentFocus++;
        /*and and make the current item more visible:*/
        addActive(x);
      } else if (e.keyCode == 38) { //up
        /*If the arrow UP key is pressed,
        decrease the currentFocus variable:*/
        currentFocus--;
        /*and and make the current item more visible:*/
        addActive(x);
      } else if (e.keyCode == 13) {
        /*If the ENTER key is pressed, prevent the form from being submitted,*/
        e.preventDefault();
        if (currentFocus > -1) {
          /*and simulate a click on the "active" item:*/
          if (x) x[currentFocus].click();
        }
      }
  });
  function addActive(x) {
    /*a function to classify an item as "active":*/
    if (!x) return false;
    /*start by removing the "active" class on all items:*/
    removeActive(x);
    if (currentFocus >= x.length) currentFocus = 0;
    if (currentFocus < 0) currentFocus = (x.length - 1);
    /*add class "autocomplete-active":*/
    x[currentFocus].classList.add("autocomplete-active");
  }
  function removeActive(x) {
    /*a function to remove the "active" class from all autocomplete items:*/
    for (var i = 0; i < x.length; i++) {
      x[i].classList.remove("autocomplete-active");
    }
  }
  function closeAllLists(elmnt) {
    /*close all autocomplete lists in the document,
    except the one passed as an argument:*/
    var x = document.getElementsByClassName("autocomplete-items");
    for (var i = 0; i < x.length; i++) {
      if (elmnt != x[i] && elmnt != inp) {
        x[i].parentNode.removeChild(x[i]);
      }
    }
  }
  /*execute a function when someone clicks in the document:*/
  document.addEventListener("click", function (e) {
      closeAllLists(e.target);
  });
}

/*An array containing all the country names in the world:*/
var countries = ["ramesh","mukesh","suresh"];

/*initiate the autocomplete function on the "myInput" element, and pass along the countries array as possible autocomplete values:*/
// autocomplete(document.getElementById("myInput"), countries);

//   function showPatient(image, id){
//     document.getElementById("patient_image").src = image+".png";
//     document.getElementById("patient_id").innerHTML = " "+id;
    // document.getElementById("patient_name").innerHTML = " "+name;
    // document.getElementById("patient_address").innerHTML = " "+address;
  // <!-- } -->

</script>

</body>
</html>